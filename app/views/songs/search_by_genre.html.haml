:javascript
  $(function() {
          var streamUrls = $('.temp_information').data('temp');
          if (streamUrls) {
            var currentSong = 0;
            var color_unselected = "black"
            var color_selected = "#ff3a00";

            // Setup the player to autoplay the next track
            var a = audiojs.createAll({
              trackEnded: function() {
                if (++currentSong >= streamUrls.length) {
                  currentSong = 0;
                }
                audio.load(streamUrls[currentSong]);
                audio.play();
                document.getElementById("playPause").className = "glyphicon glyphicon-pause";
                for (i = 0; i < streamUrls.length; i++) {
                  document.getElementById("song_" + i).style.color = color_unselected;
                }
                document.getElementById("song_" + currentSong).style.color = color_selected;
              }
            });

            // Load in the first track
            var audio = a[0];
            first = streamUrls[currentSong];
            audio.load(first);
            document.getElementById("song_" + currentSong).style.color = color_selected;


            $('#playPause').click(function(e) {
              audio.playPause();
              if (audio.playing) {
                document.getElementById("playPause").className = "glyphicon glyphicon-pause";
              }
              else {
                document.getElementById("playPause").className = "glyphicon glyphicon-play";
              }
            });

            $('#skip').click(function(e) {
              audio.trackEnded();
            });
          }
        });
.panel.panel-default
  .panel-heading
    %h2 The following songs containing '#{@searched_term}' were found on SoundClound
  %br
  %table.table{:width => "100%"}
    %thead
      %tr
        %th Username
        %th Title
        %th URL
    %tbody
      %div
        %div{:style => "display:none"}
          %audio{:preload => ""}
        - @songs_info.each_with_index do |metainfo, index|
          %tr{:id => "song_#{index}"}
            %td= metainfo[:username]
            %td= metainfo[:title]
            %td= link_to "Link", metainfo[:url]
      %div.temp_information{data: {temp: @stream_urls}}
